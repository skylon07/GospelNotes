.DropBar {
    width: 80%;
    position: relative;
    /* this is set/changed inside a standalone <style /> element */
    --bottom-bar-shift: 0px;
    --drop-animation-time: 0.33s;
}

.DropBar * {
    box-sizing: border-box;
    color: var(--main-color);
}

.DropBar .Bar {
    width: 100%;
    height: 40px;
    background-color: var(--drop-bar-background-color);
    padding: 0px 7px;
    box-sizing: border-box;
    display: flex;
    justify-content: space-around;
    align-items: center;
    position: relative;
    user-select: none;
}

.DropBar .SVGIcon {
    width: 30px;
    height: 30px;
    margin: 0px 12px 0px 4px;
}

.DropBar .Spacer {
    flex: 1;
}

.DropBar .BottomBar {
    width: 100%;
    height: 6px;
    background-color: var(--drop-bar-background-color);
}

.DropBar .BottomBar.raised {
    animation: BottomBar_undropShiftAnimation var(--drop-animation-time);
    /* these values hide the bar like the content box */
    position: absolute;
    top: -500px;
    opacity: 0;
    pointer-events: none;
}

@keyframes BottomBar_undropShiftAnimation {
    from {
        opacity: 1;
        transform: translateY(calc(0px + 500px));
        position: relative;
    }
    to {
        opacity: 0;
        transform: translateY(calc(-1 * var(--bottom-bar-shift) + 500px));
        position: relative;
    }
}

.DropBar .BottomBar.dropped {
    animation: BottomBar_dropShiftAnimation var(--drop-animation-time) forwards;
}

@keyframes BottomBar_dropShiftAnimation {
    from {
        opacity: 0;
        transform: translateY(calc(-1 * var(--bottom-bar-shift)));
    }
    to {
        opacity: 1;
        transform: translateY(0px);
    }
}

.DropBar .DropdownButton {
    width: 30px;
    height: 30px;
    stroke: var(--main-color);
    stroke-width: 3px;
    animation-timing-function: ease-out;
}

html .DropBar .DropdownButton.initAnimation {
    animation-duration: 0s;
}

.DropBar .DropdownButton.raised {
    animation: DropdownButton_undropAnimation var(--drop-animation-time) forwards;
}

@keyframes DropdownButton_undropAnimation {
    from {
        transform: rotateX(180deg);
    }
    to {
        transform: rotateX(0deg);
    }
}

.DropBar .DropdownButton.dropped {
    animation: DropdownButton_dropAnimation var(--drop-animation-time) forwards;
}

@keyframes DropdownButton_dropAnimation {
    from {
        transform: rotateX(0deg);
    }
    to {
        transform: rotateX(180deg);
    }
}

.DropBarContent {
    position: relative;
    max-height: 300px;
    width: 86%;
    padding: 0px;
    margin-left: 8px;
    background-color: var(--clear);
}

html .DropBarContent.initAnimation {
    animation-duration: 0s;
}

.DropBarContent.raised {
    animation: DropBarContent_undropAnimation var(--drop-animation-time);
    /* removes from document flow (but keeps offset height) */
    position: absolute;
    /* keeps scrollbox from growing (won't scroll up extra) */
    top: -500px;
    /* hides element from view */
    opacity: 0;
    /* disables interacting with element */
    pointer-events: none;
}

@keyframes DropBarContent_undropAnimation {
    from {
        opacity: 1;
        /* +500px offsets for the "top" parameter above */
        transform: translateY(calc(0% + 500px)) scaleY(1);
        /* keeps inside document flow until after animation */
        position: relative;
    }
    to {
        opacity: 0;
        transform: translateY(calc(-50% + 500px)) scaleY(0);
        position: relative;
    }
}

.DropBarContent.dropped {
    animation: DropBarContent_dropAnimation var(--drop-animation-time) forwards;
}

@keyframes DropBarContent_dropAnimation {
    from {
        opacity: 0;
        transform: translateY(-50%) scaleY(0);
    }
    to {
        opacity: 1;
        transform: translateY(0%) scaleY(1);
    }
}

.DropBarContent .Container {
    width: 100%;
    max-height: 300px;
    overflow-y: scroll;
}

.DropBarContent .Container > * {
    margin: 12px 0px;
}

.DropBarContent .TopGradient {
    position: absolute;
    top: 0px;
    width: 100%;
    border-bottom: 12px solid;
    /* background is used to blend the shadow since it doesn't reach the edges */
    border-image: linear-gradient( to bottom, rgba(var(--main-background), 0.7), rgba(var(--main-background), 0.55), rgba(var(--main-background), 0.3), rgba(var(--main-background), 0.15), var(--clear)) 12;
    opacity: 0.8;
}

.DropBarContent .BottomGradient {
    position: absolute;
    bottom: 0px;
    width: 100%;
    border-top: 10px solid;
    border-image: linear-gradient( to top, rgba(var(--main-background), 0.65), rgba(var(--main-background), 0.35), rgba(var(--main-background), 0.15), var(--clear)) 10;
}