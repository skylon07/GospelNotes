.DropBar, .DropBarTransform {
    /* set as var here for animations */
    --bottom-bar-height: 6px;
    /* this is set/changed inside a standalone <style /> element */
    --bottom-bar-shift: 0px;
    --drop-animation-time: 0.35s;
    --sibling-shift: calc(-1 * var(--bottom-bar-shift) - var(--bottom-bar-height));
}

.DropBar {
    position: relative;
    width: 100%;
}

.DropBar * {
    box-sizing: border-box;
    color: var(--main-color);
}

.DropBar .Bar {
    /* positioning */
    position: relative;

    /* dimensions */
    width: 100%;
    height: 40px;

    /* layout */
    padding: 0px 7px;
    box-sizing: border-box;

    /* flex-positioning */
    display: flex;
    justify-content: space-around;
    align-items: center;

    /* colors */
    background-color: var(--drop-bar-background-color);

    /* other */
    user-select: none;
}

.DropBar .Bar .Holdable {
    height: 100%;
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

.DropBar .Bar .Icon {
    padding: 0px 12px 0px 4px;
    background-color: darkgreen;
}

.DropBar .Bar .Icon .SVGIcon {
    width: 30px;
    height: 30px;
}

.DropBar .Bar .Title {
    flex: 1;
}

/* html overrides specificity */
html .DropBar .BottomBar.noMountingAnimation {
    animation-duration: 0s;
    opacity: 0;
    transform: translateY(calc(-1 * var(--bottom-bar-shift) + 500px));
}

.DropBar .BottomBar {
    width: 100%;
    height: var(--bottom-bar-height);
    background-color: var(--drop-bar-background-color);
}

.DropBar .BottomBar.raised {
    position: absolute;
    top: -500px;
    opacity: 0;
    animation: BottomBar_undropShiftAnimation var(--drop-animation-time);
    /* these values hide the bar like the content box */
    pointer-events: none;
}

@keyframes BottomBar_undropShiftAnimation {
    from {
        opacity: 1;
        transform: translateY(calc(0px + 500px));
        position: relative;
    }
    to {
        opacity: 0;
        transform: translateY(calc(-1 * var(--bottom-bar-shift) + 500px));
        position: relative;
    }
}

.DropBar .BottomBar.dropped {
    animation: BottomBar_dropShiftAnimation var(--drop-animation-time) forwards;
}

@keyframes BottomBar_dropShiftAnimation {
    from {
        opacity: 0;
        transform: translateY(calc(-1 * var(--bottom-bar-shift)));
    }
    to {
        opacity: 1;
        transform: translateY(0px);
    }
}

.DropBar .DropdownButton.noMountingAnimation {
    animation-duration: 0s;
    transform: rotateX(180deg);
}
.DropBar .DropdownButton {
    width: 30px;
    height: 30px;
    stroke: var(--main-color);
    stroke-width: 3px;
    animation-timing-function: ease-out;
}

.DropBar .DropdownButton.raised {
    animation: DropdownButton_undropAnimation var(--drop-animation-time)
        forwards;
}

@keyframes DropdownButton_undropAnimation {
    from {
        transform: rotateX(0deg);
    }
    to {
        transform: rotateX(180deg);
    }
}

.DropBar .DropdownButton.dropped {
    animation: DropdownButton_dropAnimation var(--drop-animation-time) forwards;
}

@keyframes DropdownButton_dropAnimation {
    from {
        transform: rotateX(180deg);
    }
    to {
        transform: rotateX(0deg);
    }
}

.DropBarContent {
    /* positioning */
    position: relative;

    /* dimensions */
    min-height: 30px;
    max-height: 300px;
    width: 86%;

    /* layout */
    padding: 0px;
    margin-left: 8px;

    /* coloring */
    background-color: var(--clear);
}

.DropBar .DropBarContent.noMountingAnimation {
    animation-duration: 0s;
    opacity: 0;
    transform: translateY(calc(-50% + 500px)) scaleY(0);
}

.DropBarContent.raised {
    position: absolute; /* removes from document flow (but keeps offset height) */
    top: -500px; /* keeps scrollbox from growing (won't scroll up extra) */
    opacity: 0; /* hides element from view */
    animation: DropBarContent_undropAnimation var(--drop-animation-time);
    pointer-events: none; /* disables interacting with element */
}

@keyframes DropBarContent_undropAnimation {
    from {
        opacity: 1;
        /* +500px offsets for the "top" parameter above */
        transform: translateY(calc(0% + 500px)) scaleY(1);
        /* keeps inside document flow until after animation */
        position: relative;
    }
    to {
        opacity: 0;
        transform: translateY(calc(-50% + 500px)) scaleY(0);
        position: relative;
    }
}

.DropBarContent.dropped {
    animation: DropBarContent_dropAnimation var(--drop-animation-time) forwards;
}

@keyframes DropBarContent_dropAnimation {
    from {
        opacity: 0;
        transform: translateY(-50%) scaleY(0);
    }
    to {
        opacity: 1;
        transform: translateY(0%) scaleY(1);
    }
}

.DropBarContent .Container {
    width: 100%;
    max-height: 48vh;
    overflow-y: scroll;
}

.DropBarContent .Container > * {
    margin: 0.6em 0em;
}

.DropBarContent .TopGradient {
    /* positioning */
    position: absolute;
    top: 0px;

    /* dimensions */
    width: 100%;

    /* layout */
    border-bottom: 12px solid;

    /* background */
    /* NOTE: background is used to blend the shadow since it doesn't reach the edges */
    border-image: linear-gradient(
            to bottom,
            rgba(var(--main-background), 0.7),
            rgba(var(--main-background), 0.55),
            rgba(var(--main-background), 0.3),
            rgba(var(--main-background), 0.15),
            var(--clear)
        )
        12;

    /* color */
    opacity: 0.8;
}

.DropBarContent .BottomGradient {
    /* positioning */
    position: absolute;
    bottom: 0px;

    /* dimensions */
    width: 100%;

    /* layout */
    border-top: 10px solid;

    /* background */
    border-image: linear-gradient(
            to top,
            rgba(var(--main-background), 0.65),
            rgba(var(--main-background), 0.35),
            rgba(var(--main-background), 0.15),
            var(--clear)
        )
        10;
}

.DropBarContent .Container .AddButton {
    /* centering (on x-axis only) */
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    
    /* other */
    margin-bottom: 1em;
    color: var(--main-link-color);
    font-size: 1.1em;
}

html body .DropBarTransform.dropping {
    animation: DropBar_siblingDropAnimation var(--drop-animation-time);
}

html body .DropBarTransform.raising {
    animation: DropBar_siblingRaiseAnimation var(--drop-animation-time);
}

@keyframes DropBar_siblingDropAnimation {
    from {
        transform: translateY(var(--sibling-shift));
    }
    to {
        transform: translateY(0px);
    }
}

@keyframes DropBar_siblingRaiseAnimation {
    from {
        transform: translateY(0px);
    }
    to {
        transform: translateY(var(--sibling-shift));
    }
}
